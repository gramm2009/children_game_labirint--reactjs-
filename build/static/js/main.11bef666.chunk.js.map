{"version":3,"sources":["reportWebVitals.ts","App.tsx","redux/menuPage/menuPageActions.tsx","hooks/useChange.tsx","pages/menuPage/MenuPage.tsx","redux/gamePage/gamePageActions.tsx","pages/gamePage/components/gameField/GameField.tsx","pages/gamePage/components/gameField/utils/result.tsx","pages/gamePage/components/stepsField/StepsField.tsx","pages/gamePage/utils/generatorMoves.tsx","pages/gamePage/GamePage.tsx","pages/gamePage/utils/cleaner.tsx","pages/gamePage/utils/arrowEffect.tsx","pages/gamePage/utils/move.tsx","pages/gamePage/utils/startGame.tsx","router/router.tsx","redux/menuPage/menuPageReducer.tsx","redux/gamePage/gamePageReducer.tsx","redux/rootReducer.tsx","index.tsx","redux/store.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","className","to","LEVEL_GAME_UP","LEVEL_GAME_DOWN","SPEED_GAME_UP","SPEED_GAME_DOWN","useChange","dispatch","useDispatch","levelGame","useSelector","state","menuPageReducer","speedGame","levelUp","type","alert","levelDown","speedUp","speedDown","MenuPage","change","onClick","GAME_STATUS","gameStatusAction","status","payload","SCORE","BUTTON_STATUS","buttonStatusAction","GameField","useState","size","setSize","sizeGameField","statusGame","gamePageReducer","borderCellValue","useEffect","Array","fill","generateItems","event","error","score","finish","document","querySelector","target","classList","contains","console","log","innerHTML","getElementById","id","add","textContent","result","Score","map","row","i","cell","k","StepsField","masTr","setMasTr","masTd","setMasTd","generateTd","GeneratorMoves","tenMoves","mov","Math","random","ceil","push","GamePage","buttonStatus","disabled","start","steps","querySelectorAll","arraySteps","from","remove","el","cleaner","timeEffect","newTenMoves","setTimeout","length","ArrowEffect","coordinatesStep","Move","gameCells","getElementsByClassName","cellStart","toFixed","getAttribute","StartGame","Router","exact","path","component","defaultState","showMenuPage","rootReducer","combineReducers","action","store","middlewares","createStore","compose","applyMiddleware","thunk","reduxLogger","window","__REDUX_DEVTOOLS_EXTENSION__","f","configureStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11bef666.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport './App.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction App () {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-container\">\r\n        <Link to='/menupage' className=\"App-link\">\r\n          <div className=\"App-title\">\r\n            Игра ЛАБИРИНТ\r\n        </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\ntype LevelGameUpType = {\r\n    type: typeof LEVEL_GAME_UP\r\n}\r\n\r\nexport const LEVEL_GAME_UP = 'LEVEL_GAME_UP'\r\nexport const levelGameUpAction = (): LevelGameUpType => ( { type: LEVEL_GAME_UP } )\r\n\r\n\r\n\r\ntype LevelGameDownType = {\r\n    type: typeof LEVEL_GAME_DOWN\r\n}\r\n\r\nexport const LEVEL_GAME_DOWN = 'LEVEL_GAME_DOWN'\r\nexport const levelGameDownAction = (): LevelGameDownType => ( { type: LEVEL_GAME_DOWN } )\r\n\r\n\r\n\r\ntype SpeedGameUpType = {\r\n    type: typeof SPEED_GAME_UP\r\n}\r\n\r\nexport const SPEED_GAME_UP = 'SPEED_GAME_UP'\r\nexport const speedGameUpAction = (): SpeedGameUpType => ( { type: SPEED_GAME_UP } )\r\n\r\n\r\n\r\ntype SpeedGameDownType = {\r\n    type: typeof SPEED_GAME_DOWN\r\n}\r\n\r\nexport const SPEED_GAME_DOWN = 'SPEED_GAME_DOWN'\r\nexport const speedGameDownAction = (): SpeedGameDownType => ( { type: SPEED_GAME_DOWN } )\r\n\r\n\r\n\r\nexport type MenuPageActionsType = LevelGameUpType | LevelGameDownType | SpeedGameUpType|SpeedGameDownType\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { levelGameDownAction, levelGameUpAction, speedGameDownAction, speedGameUpAction } from \"../redux/menuPage/menuPageActions\"\r\nimport { RootState } from \"../redux/rootReducer\"\r\n\r\ntype  useChangeType= {\r\n    levelUp: () => void\r\n    levelDown: () => void\r\n    speedUp: () => void\r\n    speedDown: () => void\r\n}\r\n\r\nconst useChange=():useChangeType=>{\r\n    \r\n    const dispatch=useDispatch()\r\n    const levelGame = useSelector( ( state: RootState ) => state.menuPageReducer.levelGame )\r\n    const speedGame = useSelector( ( state: RootState ) => state.menuPageReducer.speedGame )\r\n    \r\n    const levelUp = (): void => {\r\n        \r\n        if ( levelGame !== 6 ) {\r\n            dispatch( levelGameUpAction() )\r\n        } else {\r\n            alert( ' Максимальный уровень в данной игре 6' )\r\n        }\r\n    }\r\n    \r\n    const levelDown = (): void => {\r\n        if ( levelGame !== 3 ) {\r\n            dispatch( levelGameDownAction() )\r\n        } else {\r\n            alert( ' Минимальный уровень в данной игре 3' )\r\n        }\r\n    }\r\n    \r\n    const speedUp = (): void => {\r\n        if ( speedGame !== 3 ) {\r\n            dispatch( speedGameUpAction() )\r\n        } else {\r\n            alert( 'Максимальная скорость в данной игре 3 ' )\r\n        }\r\n    }\r\n    \r\n    const speedDown = (): void => {\r\n        if ( speedGame !== 1 ) {\r\n            dispatch( speedGameDownAction() )\r\n        } else {\r\n            alert( ' Минимальная скорость в данной игре 1' )\r\n        }\r\n    }\r\n    \r\n    return {levelUp, levelDown, speedUp, speedDown}\r\n}\r\n\r\nexport default useChange","import { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../redux/rootReducer\"\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./style.scss\"\r\nimport useChange from \"../../hooks/useChange\";\r\n\r\nexport const MenuPage: React.FC = () => {\r\n\r\n    const change = useChange()\r\n\r\n    const levelGame = useSelector( ( state: RootState ) => state.menuPageReducer.levelGame )\r\n    // const speedGame = useSelector( ( state: RootState ) => state.menuPageReducer.speedGame )\r\n\r\n    return (\r\n        <div className=\"MenuPage\">\r\n\r\n            <div className=\"MenuPage-container\">\r\n\r\n                <div>Задача игры:   Найти выход из лабиринта</div>\r\n                <div>Как играть:   Следите за подсказками ( стрелки )</div>\r\n\r\n                <div>\r\n                    <span>Всего уровней сложности в игре:  От 3 - 6</span>\r\n                    <br />\r\n                    {/* <span>Возможная скорость в игре: От 1 - 10</span> */ }\r\n                </div>\r\n\r\n                <div>\r\n                    <span>Выбрать начальный уровень сложности: </span>\r\n                    <button onClick={ () => change.levelDown() }>-</button>\r\n                    <span> { levelGame } </span>\r\n                    <button onClick={ () => change.levelUp() }>+</button>\r\n                </div>\r\n\r\n                {/* <div>\r\n                    <span>Выбрать начальную скорость игры: </span>\r\n                    <button onClick={ () => change.speedDown() }>-</button>\r\n                    <span> { speedGame } </span>\r\n                    <button onClick={ () => change.speedUp() }>+</button>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <Link to=\"/gamepage\"> <button>Перейти к игре</button></Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","type GameStatusType = {\r\n    type: typeof GAME_STATUS;\r\n    payload: boolean;\r\n};\r\n\r\nexport const GAME_STATUS = \"GAME_STATUS\";\r\nexport const gameStatusAction = (status: boolean): GameStatusType => ({ type: GAME_STATUS, payload: status });\r\n\r\n\r\n\r\ntype ScoreType = {\r\n    type: typeof SCORE;\r\n    payload: number;\r\n};\r\n\r\nexport const SCORE = \"SCORE\";\r\nexport const Score = (score: number): ScoreType => ({ type: SCORE, payload: score });\r\n\r\n\r\n\r\ntype DisabledButtonType = {\r\n    type: typeof BUTTON_STATUS;\r\n    payload: boolean;\r\n};\r\n\r\nexport const BUTTON_STATUS = \"BUTTON_STATUS\";\r\nexport const buttonStatusAction = (status: boolean): DisabledButtonType => ({ type: BUTTON_STATUS, payload: status });\r\n\r\n\r\n\r\nexport type GamePageActionsType = GameStatusType | ScoreType | DisabledButtonType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { gameStatusAction, Score, buttonStatusAction } from \"../../../../redux/gamePage/gamePageActions\";\r\nimport { RootState } from \"../../../../redux/rootReducer\";\r\nimport \"./styles.scss\";\r\nimport { result } from \"./utils/result\";\r\n\r\nexport const GameField: React.FC = () => {\r\n    const [ size, setSize ] = useState<Array<string>>( [] );\r\n    const sizeGameField = useSelector( ( state: RootState ) => state.menuPageReducer.levelGame );\r\n\r\n    const dispatch = useDispatch()\r\n    const statusGame = useSelector( ( state: RootState ) => state.gamePageReducer.statusGame )\r\n\r\n    const borderCellValue = [ \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\" ];\r\n\r\n    useEffect( () => {\r\n        const generateItems = ( size: number ): Array<string> => {\r\n            return new Array( size + 1 ).fill( \"\" );\r\n        };\r\n        setSize( generateItems( sizeGameField ) );\r\n    }, [ sizeGameField ] );\r\n\r\n    const answer = ( event: React.MouseEvent<HTMLTableElement> ) => {\r\n        if ( statusGame ) {\r\n            const { score, status } = result( event )\r\n\r\n            if ( status ) {\r\n                dispatch( Score( score ) )\r\n                dispatch( gameStatusAction( false ) )\r\n                dispatch( buttonStatusAction( false ) )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className=\"GameField\" onClick={ answer }>\r\n            <tbody>\r\n                { size.map( ( row, i ) => {\r\n                    return (\r\n                        <tr className=\"GameField-row\" key={ `${ i + 1000 }` }>\r\n                            { size.map( ( cell, k ) => {\r\n                                if ( i === 0 && k === 0 ) {\r\n                                    return <td className=\" GameField-zeroCell  GameField-topCell GameField-cell\" key={ `${ i }${ k }` }></td>;\r\n                                }\r\n                                if ( i === 0 ) {\r\n                                    return (\r\n                                        <td className=\" GameField-topCell GameField-cell\" key={ `${ i }${ k }` }>\r\n                                            { borderCellValue[ k - 1 ] }\r\n                                        </td>\r\n                                    );\r\n                                }\r\n                                if ( k === 0 ) {\r\n                                    return (\r\n                                        <td className=\" GameField-leftCell GameField-cell\" key={ `${ i }${ k }` }>\r\n                                            { borderCellValue[ i - 1 ] }\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                                return <td id={ `${ i }${ k }` } className=\" GameField-gameCell GameField-cell\" key={ `${ i }${ k }` }></td>;\r\n                            } ) }\r\n                        </tr>\r\n                    );\r\n                } ) }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n","type ResultType = {\r\n    score: number\r\n    status: boolean\r\n}\r\n\r\nexport const result = ( event: React.MouseEvent<HTMLTableElement> ): ResultType => {\r\n\r\n    let score: number = 0\r\n    let status: boolean = false\r\n\r\n    let finish: Element = document.querySelector( '.finish' )!\r\n    let error!: Element\r\n\r\n\r\n    if ( ( event.target as HTMLElement ).classList.contains( 'finish' ) ) {\r\n        console.log( 'this is finish' );\r\n        finish.innerHTML = 'Finish'\r\n        score = 1;\r\n        status = true;\r\n    } else {\r\n        if ( ( event.target as HTMLElement ).classList.contains( 'GameField-gameCell' ) ) {\r\n\r\n            error = document.getElementById( `${ ( event.target as HTMLElement ).id }` )!\r\n            error.classList.add('error')\r\n            error.textContent = 'Error'\r\n            finish.innerHTML = 'Finish'\r\n            score = -1;\r\n            status = true;\r\n            \r\n        }\r\n    }\r\n    return { score, status }\r\n}","import { useEffect, useState } from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nexport const StepsField: React.FC = () => {\r\n    const [ masTr, setMasTr ] = useState<Array<string>>( [] );\r\n    const [ masTd, setMasTd ] = useState<Array<string>>( [] );\r\n\r\n    let id: number = 99\r\n\r\n    useEffect( () => {\r\n        const generateTr = ( size: number ): Array<string> => {\r\n            return new Array( size ).fill( \"\" );\r\n        };\r\n\r\n        const generateTd = ( size: number ): Array<string> => {\r\n            return new Array( size ).fill( \"\" );\r\n        };\r\n\r\n        setMasTr( generateTr( 2 ) );\r\n        setMasTd( generateTd( 5 ) );\r\n    }, [] );\r\n\r\n    return (\r\n        <table className=\"StepsField\">\r\n            <tbody>\r\n                { masTr.map( ( row, i ) => {\r\n                    return (\r\n                        <tr className=\"StepsField-row\" key={ `${ i + id }` }>\r\n                            {masTd.map( ( cell, k ) => {\r\n                                id++\r\n                                return <td className=\"StepsField-cell\" key={ `${ i }${ k }` } id={ `${ id }` }></td>;\r\n                            } ) }\r\n                        </tr>\r\n                    );\r\n                } ) }\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n","type GeneratorMovesType = {\r\n    tenMoves: Array<number>\r\n}\r\n\r\nexport const GeneratorMoves = (): GeneratorMovesType => {\r\n\r\n    let tenMoves: Array<number> = []\r\n\r\n    for ( let i = 0; i < 10; i++ ) {\r\n        let mov: number = ( ( Math.random() * 4 ) );\r\n        mov = Math.ceil( mov )\r\n        tenMoves.push( mov );\r\n    }\r\n\r\n    return { tenMoves }\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/rootReducer\";\r\nimport { GameField } from \"./components/gameField/GameField\";\r\nimport { StepsField } from \"./components/stepsField/StepsField\";\r\nimport \"./style.scss\";\r\nimport { ArrowEffect } from \"./utils/arrowEffect\";\r\nimport { Move } from \"./utils/move\";\r\nimport { StartGame } from \"./utils/startGame\";\r\nimport { buttonStatusAction, gameStatusAction } from \"../../redux/gamePage/gamePageActions\"\r\nimport { cleaner } from \"./utils/cleaner\";\r\nimport useChange from \"../../hooks/useChange\";\r\n\r\nexport const GamePage: React.FC = () => {\r\n\r\n    const change = useChange()\r\n    const dispatch = useDispatch()\r\n\r\n    const levelGame = useSelector( ( state: RootState ) => state.menuPageReducer.levelGame )\r\n    // const speedGame = useSelector( ( state: RootState ) => state.menuPageReducer.speedGame )\r\n\r\n\r\n    const score = useSelector( ( state: RootState ) => state.gamePageReducer.score )\r\n    const buttonStatus = useSelector( ( state: RootState ) => state.gamePageReducer.buttonStatus )\r\n\r\n\r\n\r\n\r\n    const start = () => {\r\n        dispatch( buttonStatusAction( true ) )\r\n        cleaner()\r\n        const { id } = StartGame();\r\n        const { newTenMoves } = Move( id );\r\n        const { timeEffect } = ArrowEffect( newTenMoves )\r\n        setTimeout( () => {\r\n            dispatch( gameStatusAction( true ) )\r\n        }, timeEffect )\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"GamePage\">\r\n            <div className=\"GamePage-container\">\r\n                <span>Children Game LABIRINT</span>\r\n                <span>Score: { score }</span>\r\n                <div>\r\n                    <span>Изменить уровень сложности: </span>\r\n                    <button disabled={ buttonStatus ? true : false } onClick={ () => change.levelDown() }>-</button>\r\n                    <span> { levelGame } </span>\r\n                    <button disabled={ buttonStatus ? true : false } onClick={ () => change.levelUp() }>+</button>\r\n                </div>\r\n\r\n                {/* <div>\r\n                    <span>Изменить скорость игры: </span>\r\n                    <button onClick={ () => change.speedDown() }>-</button>\r\n                    <span> { speedGame } </span>\r\n                    <button onClick={ () => change.speedUp() }>+</button>\r\n                </div> */}\r\n                <GameField />\r\n                <StepsField />\r\n                <button\r\n                    className=\"GamePage-btn-startGame\"\r\n                    onClick={ start }\r\n                    disabled={ buttonStatus ? true : false }\r\n                >START GAME</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const cleaner = () => {\r\n    let start: Element | null = document.querySelector( '.start' )\r\n    let finish: Element | null = document.querySelector( '.finish' )\r\n    let error: Element | null = document.querySelector( '.error' )\r\n    let steps: NodeListOf<Element> = document.querySelectorAll( '.StepsField-cell' )\r\n    let arraySteps: Array<Element> = Array.from( steps )\r\n\r\n    if ( start ) {\r\n        start.classList.remove( 'start' )\r\n        start.textContent = ''\r\n    }\r\n\r\n    if ( finish ) {\r\n        finish.classList.remove( 'finish' )\r\n        finish.textContent = ''\r\n    }\r\n\r\n    if ( error ) {\r\n        error.classList.remove( 'error' )\r\n        error.textContent = ''\r\n    }\r\n    arraySteps.map(el=>el.textContent='')\r\n\r\n}","import \"./style.scss\"\r\n\r\ntype ArrowEffectType = {\r\n    timeEffect: number\r\n}\r\n\r\nexport const ArrowEffect = ( newTenMoves: Array<number> ): ArrowEffectType => {\r\n    let id = 100;\r\n    let timeEffect: number = 0;\r\n\r\n    for ( let i = 0; i < newTenMoves.length; i++ ) {\r\n\r\n        setTimeout( () => {\r\n            if ( newTenMoves[ i ] === 1 ) {\r\n                document.getElementById( `${ id }` )!.innerHTML = '<div class=\"span span-right\">&#10154;</div> ';\r\n            }\r\n            if ( newTenMoves[ i ] === 2 ) {\r\n                document.getElementById( `${ id }` )!.innerHTML = '<div class=\"span span-bottom\">&#10154;</div> ';\r\n            }\r\n            if ( newTenMoves[ i ] === 3 ) {\r\n                document.getElementById( `${ id }` )!.innerHTML = '<div class=\"span span-left\">&#10154;</div> ';\r\n            }\r\n            if ( newTenMoves[ i ] === 4 ) {\r\n                document.getElementById( `${ id }` )!.innerHTML = '<div class=\"span span-top\">&#10154;</div> ';\r\n            }\r\n            id++;\r\n\r\n        }, ( 1 + i ) * 1000 );\r\n\r\n        timeEffect = ( 1 + i ) * 1000\r\n    }\r\n\r\n    return { timeEffect }\r\n\r\n\r\n};","import { GeneratorMoves } from \"./generatorMoves\";\r\n\r\ntype MoveType = {\r\n    newTenMoves: Array<number>;\r\n};\r\n\r\nexport const Move = ( id: number ): MoveType => {\r\n\r\n    let coordinatesStep: number = id;\r\n    let newTenMoves: Array<number> = [];\r\n    let finish: HTMLElement | null;\r\n\r\n    let status = true\r\n\r\n    while ( status ) {\r\n        const { tenMoves } = GeneratorMoves()\r\n        for ( let i = 0; i < tenMoves.length; i++ ) {\r\n\r\n            if ( tenMoves[ i ] === 1 ) {\r\n                if ( document.getElementById( `${ coordinatesStep + 1 }` ) ) {\r\n                    coordinatesStep = coordinatesStep + 1;\r\n                    newTenMoves.push( 1 );\r\n                } else {\r\n                    if ( document.getElementById( `${ coordinatesStep + 10 }` ) ) {\r\n                        coordinatesStep = coordinatesStep + 10;\r\n                        newTenMoves.push( 2 );\r\n                    } else {\r\n                        if ( document.getElementById( `${ coordinatesStep - 10 }` ) ) {\r\n                            coordinatesStep = coordinatesStep - 10;\r\n                            newTenMoves.push( 4 );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ( tenMoves[ i ] === 2 ) {\r\n                if ( document.getElementById( `${ coordinatesStep + 10 }` ) ) {\r\n                    coordinatesStep = coordinatesStep + 10;\r\n                    newTenMoves.push( 2 );\r\n                } else {\r\n                    if ( document.getElementById( `${ coordinatesStep + 1 }` ) ) {\r\n                        coordinatesStep = coordinatesStep + 1;\r\n                        newTenMoves.push( 1 );\r\n                    } else {\r\n                        if ( document.getElementById( `${ coordinatesStep - 1 }` ) ) {\r\n                            coordinatesStep = coordinatesStep - 1;\r\n                            newTenMoves.push( 3 );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ( tenMoves[ i ] === 3 ) {\r\n                if ( document.getElementById( `${ coordinatesStep - 1 }` ) ) {\r\n                    coordinatesStep = coordinatesStep - 1;\r\n                    newTenMoves.push( 3 );\r\n                } else {\r\n                    if ( document.getElementById( `${ coordinatesStep + 10 }` ) ) {\r\n                        coordinatesStep = coordinatesStep + 10;\r\n                        newTenMoves.push( 2 );\r\n                    } else {\r\n                        if ( document.getElementById( `${ coordinatesStep - 10 }` ) ) {\r\n                            coordinatesStep = coordinatesStep - 10;\r\n                            newTenMoves.push( 4 );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ( tenMoves[ i ] === 4 ) {\r\n                if ( document.getElementById( `${ coordinatesStep - 10 }` ) ) {\r\n                    coordinatesStep = coordinatesStep - 10;\r\n                    newTenMoves.push( 4 );\r\n                } else {\r\n                    if ( document.getElementById( `${ coordinatesStep + 1 }` ) ) {\r\n                        coordinatesStep = coordinatesStep + 1;\r\n                        newTenMoves.push( 1 );\r\n                    } else {\r\n                        if ( document.getElementById( `${ coordinatesStep - 1 }` ) ) {\r\n                            coordinatesStep = coordinatesStep - 1;\r\n                            newTenMoves.push( 3 );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( document.getElementById( `${ coordinatesStep }` )!.classList.contains( \"start\" ) ) {\r\n\r\n            newTenMoves = []\r\n\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n\r\n\r\n    finish = document.getElementById( `${ coordinatesStep }` );\r\n    finish!.classList.add( \"finish\" );\r\n\r\n    return { newTenMoves };\r\n};\r\n","export type StartGameType={\r\n    id:number\r\n}\r\n\r\n\r\nexport const StartGame = ():StartGameType => {\r\n\r\n    let id: number; \r\n    \r\n    const gameCells: HTMLCollectionOf<Element> = document.getElementsByClassName( \"GameField-gameCell\" )\r\n    const cellStart: number = +( Math.random() * ( gameCells.length - 1 ) ).toFixed( 0 )\r\n    gameCells[ cellStart ].classList.add( \"start\" )\r\n    gameCells[ cellStart ].textContent = \"start\"\r\n    id = +gameCells[ cellStart ].getAttribute( 'id' )!; \r\n\r\n    return { id}\r\n}","\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport { MenuPage, GamePage } from \"../pages\";\r\n\r\n\r\n\r\nexport default function Router() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route exact path=\"/menupage\" component={MenuPage} />\r\n            <Route exact path=\"/gamepage\" component={GamePage} />\r\n\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n}","import {\r\n    LEVEL_GAME_DOWN,\r\n    LEVEL_GAME_UP,\r\n    MenuPageActionsType,\r\n    SPEED_GAME_DOWN,\r\n    SPEED_GAME_UP\r\n} from \"./menuPageActions\";\r\n\r\nexport type DefaultStateType = {\r\n    levelGame: number\r\n    speedGame: number\r\n    showMenuPage: boolean\r\n}\r\n\r\nconst defaultState: DefaultStateType = {\r\n    levelGame: 3,\r\n    speedGame: 1,\r\n    showMenuPage: true\r\n};\r\n\r\nexport const menuPageReducer = ( state = defaultState, action: MenuPageActionsType ) => {\r\n    switch ( action.type ) {\r\n        case LEVEL_GAME_UP:\r\n            return { ...state, levelGame: state.levelGame + 1 };\r\n\r\n        case LEVEL_GAME_DOWN:\r\n            return { ...state, levelGame: state.levelGame - 1 };\r\n\r\n        case SPEED_GAME_UP:\r\n            return { ...state, speedGame: state.speedGame + 1 };\r\n\r\n        case SPEED_GAME_DOWN:\r\n            return { ...state, speedGame: state.speedGame - 1 };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\nimport { BUTTON_STATUS, GamePageActionsType, GAME_STATUS, SCORE } from \"./gamePageActions\";\r\n\r\nexport type DefaultStateType = {\r\n    statusGame: boolean\r\n    score: number\r\n    buttonStatus: boolean\r\n}\r\n\r\nconst defaultState: DefaultStateType = {\r\n    statusGame: false,\r\n    score: 0,\r\n    buttonStatus: false\r\n};\r\n\r\nexport const gamePageReducer = ( state = defaultState, action: GamePageActionsType ) => {\r\n    switch ( action.type ) {\r\n        case GAME_STATUS:\r\n            return { ...state, statusGame: action.payload };\r\n\r\n        case SCORE:\r\n            return { ...state, score: state.score + action.payload };\r\n\r\n        case BUTTON_STATUS:\r\n            return { ...state, buttonStatus: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {menuPageReducer} from './menuPage/menuPageReducer'\r\nimport {gamePageReducer} from './gamePage/gamePageReducer'\r\n\r\nexport const rootReducer =  combineReducers({\r\n    menuPageReducer, gamePageReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Router from './router/router';\r\nimport configureStore from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <BrowserRouter>\r\n        <Router />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' )\r\n);\r\n\r\nreportWebVitals();\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reduxLogger from 'redux-logger';\r\n\r\nimport {rootReducer} from './rootReducer';\r\n\r\nconst configureStore = ( middlewares = [] ) => createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            ...middlewares,\r\n            thunk,\r\n            reduxLogger\r\n        ),\r\n\r\n        ( window as any ).__REDUX_DEVTOOLS_EXTENSION__ ? ( window as any ).__REDUX_DEVTOOLS_EXTENSION__() : ( f: any ) => f\r\n    )\r\n);\r\n\r\nexport default configureStore;"],"sourceRoot":""}